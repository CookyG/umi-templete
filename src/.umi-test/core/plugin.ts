// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import * as Plugin_0 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/app.ts'
import * as Plugin_1 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-access/runtime.tsx'
import * as Plugin_2 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-antd/runtime.tsx'
import * as Plugin_3 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-initialState/runtime.tsx'
import * as Plugin_4 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-model/runtime.tsx'
import * as Plugin_5 from '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-locale/runtime.tsx'
import { PluginManager } from 'umi'

export function getPlugins() {
  return [
    {
      apply: Plugin_0,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/app.ts',
    },
    {
      apply: Plugin_1,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-access/runtime.tsx',
    },
    {
      apply: Plugin_2,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-antd/runtime.tsx',
    },
    {
      apply: Plugin_3,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-initialState/runtime.tsx',
    },
    {
      apply: Plugin_4,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-model/runtime.tsx',
    },
    {
      apply: Plugin_5,
      path:
        process.env.NODE_ENV === 'production'
          ? void 0
          : '/Users/cooky/workroot/ashermed/asm-umi-template/src/.umi-test/plugin-locale/runtime.tsx',
    },
  ]
}

export function getValidKeys() {
  return [
    'patchRoutes',
    'patchClientRoutes',
    'modifyContextOpts',
    'rootContainer',
    'innerProvider',
    'i18nProvider',
    'accessProvider',
    'dataflowProvider',
    'outerProvider',
    'render',
    'onRouteChange',
    'getInitialState',
    'request',
    'locale',
    'qiankun',
  ]
}

let pluginManager = null
export function createPluginManager() {
  pluginManager = PluginManager.create({
    plugins: getPlugins(),
    validKeys: getValidKeys(),
  })
  return pluginManager
}

export function getPluginManager() {
  return pluginManager
}
